mysql> CREATE DATABASE DeliverySystem;
Query OK, 1 row affected (0.01 sec)

mysql> USE DeliverySystem;
Database changed
mysql> CREATE TABLE Vehicle(
    ->     Vid INTEGER,
    ->     Max_meals INTEGER CHECK (Max_meals > 0),
    ->     Speed REAL CHECK (Speed >= 0),
    ->     Is_working BOOLEAN,
    ->     PRIMARY KEY (Vid)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Delivery_Personal(
    ->     Pid INTEGER,
    ->     Vid INTEGER,
    ->     Is_fired BOOLEAN,
    ->     PName VARCHAR(200),
    ->     DPCity VARCHAR(200),
    ->     DP_Phone_number VARCHAR(200) CHECK(DP_Phone_number REGEXP '^[0-9]{10}$'),
    ->     PRIMARY KEY (Pid),
    ->     FOREIGN KEY (Vid) REFERENCES Vehicle(Vid),
    ->     UNIQUE (Vid)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> CREATE TABLE Delivery(
    ->     Did INTEGER,
    ->     Vid INTEGER,
    ->     DDate Date,
    ->     DTIME TIME,
    ->     Is_delivered BOOLEAN,
    ->     PRIMARY KEY (Did),
    ->     FOREIGN KEY (Vid) REFERENCES Vehicle(Vid)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> CREATE TABLE Customer(
    ->     Cid INTEGER,
    ->     CName VARCHAR(200),
    ->     Adress VARCHAR(200),
    ->     Email VARCHAR(200),
    ->     Pass_word VARCHAR(200),
    ->     Phone_Number VARCHAR(200) CHECK(Phone_number REGEXP '^[0-9]{10}$'),
    ->     PRIMARY KEY (Cid),
    ->     UNIQUE(Email)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql>
mysql> CREATE TABLE Orders(
    ->     Order_id INTEGER,
    ->     Cid INTEGER,
    ->     Order_city VARCHAR(200),
    ->     PRIMARY KEY (Order_id),
    ->     FOREIGN KEY (Cid) REFERENCES Customer(Cid)
    ->     ON DELETE CASCADE
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> CREATE TABLE Composed_by(
    ->     Did INTEGER,
    ->     Order_Id INTEGER,
    ->     PRIMARY KEY (Did,Order_Id),
    ->     FOREIGN KEY (Did) REFERENCES Delivery(Did),
    ->     FOREIGN KEY (Order_Id) REFERENCES Orders(Order_Id)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> CREATE TABLE Restaurant(
    ->     Rid INTEGER,
    ->     RName VARCHAR(200),
    ->     RCity VARCHAR(200),
    ->     PRIMARY KEY (Rid)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Meal(
    ->     Rid INTEGER,
    ->     MName VARCHAR(200),
    ->     Price REAL CHECK (Price > 0),
    ->     PRIMARY KEY (MName,Rid),
    ->     FOREIGN KEY (Rid) REFERENCES Restaurant(Rid)
    ->     ON DELETE CASCADE
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> CREATE TABLE Contains(
    ->     Order_id INTEGER,
    ->     Rid INTEGER,
    ->     MName VARCHAR(200),
    ->     PRIMARY KEY (Order_id,Rid,MName),
    ->     FOREIGN KEY (Rid) REFERENCES Meal(Rid),
    ->     FOREIGN KEY (MName) REFERENCES Meal(MName),
    ->     FOREIGN KEY (Order_id) REFERENCES Orders(Order_id)
    -> );
Query OK, 0 rows affected (0.04 sec)

mysql> CREATE TABLE Payment(
    ->     PYid INTEGER,
    ->     PDate DATE,
    ->     PRIMARY KEY (PYid)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Pays(
    ->     Order_id INTEGER,
    ->     Pyid INTEGER,
    ->     PRIMARY KEY (Order_id , Pyid),
    ->     FOREIGN KEY (Order_id) REFERENCES Orders(Order_id),
    ->     FOREIGN KEY (Pyid) REFERENCES Payment(Pyid)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> CREATE TABLE Payment_online(
    ->     POid INTEGER,
    ->     POPrice REAL,
    ->     PYid INTEGER,
    ->     PTime TIME,
    ->     Credit_card INTEGER,
    ->     PRIMARY KEY (POid),
    ->     FOREIGN KEY (PYid) REFERENCES Payment(PYid),
    ->     UNIQUE (Credit_card,PTime)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> CREATE TABLE Payment_cash(
    ->     PCid INTEGER,
    ->     PCPrice REAL,
    ->     PYid INTEGER,
    ->     Budget REAL,
    ->     Pid INTEGER,
    ->     PRIMARY KEY (PCid),
    ->     FOREIGN KEY (PYid) REFERENCES Payment(PYid)
    -> );
Query OK, 0 rows affected (0.03 sec)

mysql> -- Useful for login operations or searching for a customer by email
Query OK, 0 rows affected (0.00 sec)

mysql> CREATE INDEX idx_Email ON Customer(Email);
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> -- Facilitates quick retrieval of delivery personnel details based on the vehicle they use
Query OK, 0 rows affected (0.00 sec)

mysql> CREATE INDEX idx_Vid ON Delivery_Personal(Vid);
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> -- Useful for operations like retrieving orders for a specific customer (And for Joins)
Query OK, 0 rows affected (0.00 sec)

mysql> CREATE INDEX idx_Combine_CID_OID ON Orders(Order_id,Cid);
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> -- Enables efficient retrieval of restaurant details when searching by name (Most of the real Case)
Query OK, 0 rows affected (0.00 sec)

mysql> CREATE INDEX idx_Restaurant_Name ON Restaurant(RName);
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> -- Useful for operations such as fetching meals offered by a specific restaurant (Joins in Queries)
Query OK, 0 rows affected (0.00 sec)

mysql> CREATE INDEX idx_Combine_Rid_MName ON Meal(Rid, MName);
Query OK, 0 rows affected (0.02 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql>
mysql> -- Create a trigger to update the Vid column in Delivery_Personal after an update
Query OK, 0 rows affected (0.00 sec)

mysql> -- This trigger ensures that if a delivery person is fired and has an associated vehicle,
Query OK, 0 rows affected (0.00 sec)

mysql> -- the vehicle is assigned to another delivery person if available
Query OK, 0 rows affected (0.00 sec)

mysql> DELIMITER //
mysql> CREATE TRIGGER update_delivery_personal
    -> AFTER UPDATE ON Delivery_Personal
    -> FOR EACH ROW
    -> BEGIN
    ->     IF NEW.Is_fired = TRUE AND NEW.Vid IS NOT NULL THEN
    ->         UPDATE Delivery_Personal
    ->         SET Vid = (
    ->             SELECT Vid
    ->             FROM Delivery_Personal
    ->             WHERE Is_fired = TRUE AND Vid IS NOT NULL
    ->             LIMIT 1
    ->         )
    ->         WHERE Is_fired = FALSE AND Vid IS NULL;
    ->
    ->         UPDATE Delivery_Personal
    ->         SET Vid = NULL
    ->         WHERE Is_fired = TRUE AND Vid IS NOT NULL;
    ->     END IF;
    -> END;
    -> //
Query OK, 0 rows affected (0.01 sec)

mysql> -- Create a trigger to check the delivery date before insertion
Query OK, 0 rows affected (0.00 sec)

mysql> -- This trigger ensures that the delivery date is not in the future
Query OK, 0 rows affected (0.00 sec)

mysql> DELIMITER //
mysql> CREATE TRIGGER Check_Delivery_date_trigger
    -> BEFORE INSERT ON Delivery
    -> FOR EACH ROW
    -> BEGIN
    ->     IF NEW.DDate > CURRENT_DATE THEN
    ->         SIGNAL SQLSTATE '45000'
    ->         SET MESSAGE_TEXT = 'INVALID DATE';
    ->     END IF;
    -> END;
    -> //
Query OK, 0 rows affected (0.01 sec)

mysql> -- Create a trigger to check the payment date before insertion
Query OK, 0 rows affected (0.00 sec)

mysql> -- This trigger ensures that the payment date is not in the future
Query OK, 0 rows affected (0.00 sec)

mysql> DELIMITER //
mysql> CREATE TRIGGER Check_Payment_date_trigger
    -> BEFORE INSERT ON Payment
    -> FOR EACH ROW
    -> BEGIN
    ->     IF NEW.PDate > CURRENT_DATE THEN
    ->         SIGNAL SQLSTATE '45000'
    ->         SET MESSAGE_TEXT = 'INVALID DATE';
    ->     END IF;
    -> END;
    -> //
Query OK, 0 rows affected (0.01 sec)

mysql> -- Create a trigger to handle the business logic when a vehicle is shut down
Query OK, 0 rows affected (0.00 sec)

mysql> -- This trigger reassigns deliveries from the shut down vehicle to another available vehicle if a driver is assigned
Query OK, 0 rows affected (0.00 sec)

mysql> DELIMITER //
mysql> CREATE TRIGGER Vehicle_Shut_down
    -> AFTER UPDATE ON Vehicle
    -> FOR EACH ROW
    -> BEGIN
    -> DECLARE Driver INT;
    ->     DECLARE Available_Vehicle INT;
    ->     IF NEW.Is_working = FALSE and OLD.Is_working = TRUE THEN
    ->         SELECT Pid into Driver FROM Delivery_Personal WHERE Vid = NEW.Vid;
    ->         IF Driver IS NOT NULL THEN
    ->             SELECT Vid into Available_Vehicle From Vehicle WHERE Is_working = TRUE LIMIT 1;
    ->             IF Available_Vehicle IS NOT NULL THEN
    ->                 UPDATE Delivery
    ->                 SET Vid = Available_Vehicle
    ->                 WHERE Vid = NEW.Vid AND is_delivered = FALSE;
    ->             END IF;
    ->         END IF;
    ->     END IF;
    -> END;
    -> //
Query OK, 0 rows affected (0.01 sec)

mysql> SHOW TABLES;
    -> //
+--------------------------+
| Tables_in_deliverysystem |
+--------------------------+
| composed_by              |
| contains                 |
| customer                 |
| delivery                 |
| delivery_personal        |
| meal                     |
| orders                   |
| payment                  |
| payment_cash             |
| payment_online           |
| pays                     |
| restaurant               |
| vehicle                  |
+--------------------------+
13 rows in set (0.00 sec)

mysql> SHOW INDEX FROM Customer;
    -> //
+----------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
| Table    | Non_unique | Key_name  | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |
+----------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
| customer |          0 | PRIMARY   |            1 | Cid         | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |
| customer |          0 | Email     |            1 | Email       | A         |           0 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |
| customer |          1 | idx_Email |            1 | Email       | A         |           0 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |
+----------+------------+-----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
3 rows in set (0.01 sec)

mysql> SHOW INDEX FROM Meal;
    -> //
+-------+------------+-----------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
| Table | Non_unique | Key_name              | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |
+-------+------------+-----------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
| meal  |          0 | PRIMARY               |            1 | MName       | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |
| meal  |          0 | PRIMARY               |            2 | Rid         | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |
| meal  |          1 | idx_Combine_Rid_MName |            1 | Rid         | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |
| meal  |          1 | idx_Combine_Rid_MName |            2 | MName       | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |
+-------+------------+-----------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
4 rows in set (0.01 sec)

mysql> SHOW INDEX FROM Restaurant;
    -> //
+------------+------------+---------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
| Table      | Non_unique | Key_name            | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |
+------------+------------+---------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
| restaurant |          0 | PRIMARY             |            1 | Rid         | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |
| restaurant |          1 | idx_Restaurant_Name |            1 | RName       | A         |           0 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |
+------------+------------+---------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
2 rows in set (0.01 sec)

mysql> SHOW INDEX FROM Delivery_Personal;
    -> //
+-------------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
| Table             | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |
+-------------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
| delivery_personal |          0 | PRIMARY  |            1 | Pid         | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |
| delivery_personal |          0 | Vid      |            1 | Vid         | A         |           0 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |
| delivery_personal |          1 | idx_Vid  |            1 | Vid         | A         |           0 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |
+-------------------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
3 rows in set (0.01 sec)

mysql> SHOW INDEX FROM Orders;
    -> //
+--------+------------+---------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
| Table  | Non_unique | Key_name            | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |
+--------+------------+---------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
| orders |          0 | PRIMARY             |            1 | Order_id    | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |
| orders |          1 | Cid                 |            1 | Cid         | A         |           0 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |
| orders |          1 | idx_Combine_CID_OID |            1 | Order_id    | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |
| orders |          1 | idx_Combine_CID_OID |            2 | Cid         | A         |           0 |     NULL |   NULL | YES  | BTREE      |         |               | YES     | NULL       |
+--------+------------+---------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
4 rows in set (0.03 sec)

mysql> SHOW TRIGGERS;
    -> //

| Trigger                     | Event  | Table             | Statement




                         | Timing | Created                | sql_mode
                                                           | Definer        | character_set_client | collation_connection | Database Collation |

| Check_Delivery_date_trigger | INSERT | delivery          | BEGIN
    IF NEW.DDate > CURRENT_DATE THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'INVALID DATE';
    END IF;
END


                                                                          | BEFORE | 2023-12-05 23:41:11.59 | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION | root@localhost | cp850                | cp850_general_ci     | utf8mb4_0900_ai_ci |
| update_delivery_personal    | UPDATE | delivery_personal | BEGIN
    IF NEW.Is_fired = TRUE AND NEW.Vid IS NOT NULL THEN
        UPDATE Delivery_Personal
        SET Vid = (
            SELECT Vid
            FROM Delivery_Personal
            WHERE Is_fired = TRUE AND Vid IS NOT NULL
            LIMIT 1
        )
        WHERE Is_fired = FALSE AND Vid IS NULL;

        UPDATE Delivery_Personal
        SET Vid = NULL
        WHERE Is_fired = TRUE AND Vid IS NOT NULL;
    END IF;
END
                   | AFTER  | 2023-12-05 23:41:06.14 | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION | root@localhost | cp850                | cp850_general_ci     | utf8mb4_0900_ai_ci |
| Check_Payment_date_trigger  | INSERT | payment           | BEGIN
    IF NEW.PDate > CURRENT_DATE THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'INVALID DATE';
    END IF;
END


                                                                          | BEFORE | 2023-12-05 23:41:16.88 | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION | root@localhost | cp850                | cp850_general_ci     | utf8mb4_0900_ai_ci |
| Vehicle_Shut_down           | UPDATE | vehicle           | BEGIN
DECLARE Driver INT;
    DECLARE Available_Vehicle INT;
    IF NEW.Is_working = FALSE and OLD.Is_working = TRUE THEN
        SELECT Pid into Driver FROM Delivery_Personal WHERE Vid = NEW.Vid;
        IF Driver IS NOT NULL THEN
            SELECT Vid into Available_Vehicle From Vehicle WHERE Is_working = TRUE LIMIT 1;
            IF Available_Vehicle IS NOT NULL THEN
                UPDATE Delivery
                SET Vid = Available_Vehicle
                WHERE Vid = NEW.Vid AND is_delivered = FALSE;
            END IF;
        END IF;
    END IF;
END | AFTER  | 2023-12-05 23:41:23.94 | ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION | root@localhost | cp850                | cp850_general_ci     | utf8mb4_0900_ai_ci |

4 rows in set (0.00 sec)
mysql> \q